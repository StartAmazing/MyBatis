<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ll.mybatis.mapper.DeptMapper">
    <resultMap id="DeptResultMap" type="Dept">
    <!--  数据库中的flag列对应上实体对象中的flag属性,指定列和属性的对应关系才进行自定义类型转换      -->
    <result column="flag" property="flag"
            typeHandler="com.ll.mybatis.util.MyTypeHandler" />
</resultMap>

    <insert id="insertDept">
        insert into dept values(#{deptNo},#{dname},#{dmanager}, #{flag})
    </insert>
    <select id="deptFind" resultMap="DeptResultMap">
        select * from dept
    </select>

    <select id="deptFind2" resultType="dept">
<!--         select * from dept where dname = #{departnname} -->
        select * from dept where dname = ${value}
    </select>

    <select id="deptFind3" resultType="dept">
<!-- 动态去指定读取表 可能是dept 也可能是dept2 -->
 <!--       select * from #{tableName} 抛出异常-->
        select * from ${tableName}
    </select>

    <!--
        if标签根据条件是否为真，来决定if标签包含的内容是否能够出现在当前
        的SQL语句中
      -->
    <select id="dept_1" resultType="dept">
        SELECT * from dept
        where 1 = 1
        <!-- 如果参数对象deptno不等于null并且不等于0-->
        <if test="deptNo != null and deptNo != 0" >
            and deptNo = #{deptNo}
        </if>
        <if test="dname != null and dname != ''">
            and dname like '%' #{dname} '%'
        </if>
        <if test="dmanager != null and dmanager != ''">
            and dmanager=#{dmanager}
        </if>
    </select>


    <!--
        1. 如果where标签内部所有的判断都不成立。在查询语句中是不会出现where的
        或者只出现where 1=1
        2. where标签中，将第一个满足条件的语句中前部包含的[and 、or]自动取消
      -->
    <select id="dept_2" resultType="dept">
        SELECT * from dept
        <where>
            <!-- 如果参数对象deptno不等于null并且不等于0-->
            <if test="deptNo != null and deptNo != 0" >
                and deptNo = #{deptNo}
            </if>
            <if test="dname != null and dname != ''">
                and dname like '%' #{dname} '%'
            </if>
            <if test="dmanager != null and dmanager != ''">
                and dmanager=#{dmanager}
            </if>
        </where>
    </select>

    <!--
        set标签一般用在更新语句中，y用来动态指定需要更新的字段信息
        set标签往往需要与if标签一起进行处理
        set标签自动将最后一个更新字段后面的逗号进行取消
    -->
    <update id="deptUpdate">
        <!--update dept set dname=#{dname}
        where deptNo = #{deptNo}; -->
        update dept
        <set>
            <if test="dname != null and dname != ''">
                dname = #{dname},
            </if>
            <if test="dmanager != null and dmanager != ''">
                dmanager = #{dmanager}
            </if>
        </set>
        where deptno = #{deptNo}
    </update>

    <!--
        trim标签 自定义第一个满足条件前部的代替内容
        也可以自定义最后一个满足条件的代替内容
    -->

    <select id="dept_3" resultType="dept">
        select * from dept
        where
        <trim prefixOverrides="and | or" prefix="1 = 1 and" suffixOverrides="," suffix="">
            <if test="deptNo != null and deptNo != 0">
                and deptno = #{deptNo}
            </if>

            <if test="dname != null and dname != ''">
                and dname = #{dname}
            </if>

            <if test="dmanager != null and dmanager != ''">
                and dmanager = #{dmanager} ,
            </if>
        </trim>
    </select>

    <!--
        批处理的添加标签
    -->
    <insert id="deptSave">
        insert into dept(deptno,dname,dmanager)
        values
        <foreach collection="list" item="dept" separator=",">
            (#{dept.deptNo},#{dept.dname},#{dept.dmanager})
        </foreach>
    </insert>

    <!--
        使用List集合保存查询条件(deptno)
    -->
<!--    <select id="deptFindByList" resultType="com.ll.mybatis.entity.Employee"> 匹配类型不匹配抛出空指针异常-->
    <select id="deptFindByList" resultType="com.ll.mybatis.entity.Dept">
        select deptno,dname,dmanager
        from
        dept
        where deptno in
        <!-- open和close分别表示在第一次遍历时增加( 以及在最后一次循环的时候添加) -->
        <foreach collection="list" item="deptno" open="(" close=")" separator=",">
            #{deptno}
        </foreach>
    </select>

    <!--  使用Array保存查询条件(deptno) -->
    <select id="deptFindByArr" resultType="com.ll.mybatis.entity.Dept">
        select deptno,dname,dmanager
        from
        dept
        where deptno in
        <!-- open和close分别表示在第一次遍历时增加( 以及在最后一次循环的时候添加) -->
        <foreach collection="array" item="deptno" open="(" close=")" separator=",">
            #{deptno}
        </foreach>
    </select>

    <!-- foreach by map -->
    <select id="deptFindByMap" resultType="com.ll.mybatis.entity.Dept">
        select deptno,dname,dmanager
        from
        dept
        where deptno in
        <!-- open和close分别表示在第一次遍历时增加( 以及在最后一次循环的时候添加) -->
        <foreach collection="myMap.values" item="deptno" open="(" close=")" separator=",">
            #{deptno}
        </foreach>
    </select>


    <resultMap id="deptMap" type="dept">
        <id column="dept_deptno" property="deptNo" />
        <result column="dname" property="dname" />
        <result column="dmanger" property="dmanager"/>
        <!--
            collection标签中column属性中应该填写查询临时表中来自于一方表主键字段名
            -->
        <collection property="employees" ofType="employee" column="dept_deptno">
            <id column="empno" property="empno"></id>
            <result column="ename" property="ename"></result>
        </collection>
    </resultMap>

    <!--
        级联一对多查询操作
        查询当前部门下所有职员的名称以及对应的详细信息
    -->
    <select id="deptWithEmpListFindById" resultMap="deptMap">
        select dept.deptno dept_deptno,
                dname,
                dmanager,
                empno,
                ename,
                job,
                sal
         from dept join emp
         on dept.deptno = emp.deptno
         where dept.deptno=#{deptno}
    </select>



    <resultMap id="deptMap2" type="dept">
        <id column="dept_deptno" property="deptNo" />
        <result column="dname" property="dname" />
        <result column="dmanger" property="dmanager"/>
        <!--
            collection标签中column属性中应该填写查询临时表中来自于一方表主键字段名
            -->
        <collection property="employees"
                    ofType="employee"
                    select="empFindByDeptNo"
                    column="dept_dedptno">
        </collection>
    </resultMap>

    <!-- 根据部门编号查询部门中职员信息 -->
    <select id="empFindByDeptNo" resultType="employee">
        select
            empno,ename,job
        from
            emp
        where
            deptno = #{deptno}
    </select>

    <!--根据部门编号 查询部门信息-->
    <select id="deptFindByDeptNoWithEmp" resultMap="deptMap2">
        select
            deptno dept_dedptno,dname,dmanager
        from
            dept
        where
            deptno = #{deptno}
    </select>

</mapper>